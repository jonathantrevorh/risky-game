package edu.gatech.cs2340.risky.models.factories;

import java.util.ArrayList;

import edu.gatech.cs2340.risky.Database;
import edu.gatech.cs2340.risky.database.HashMapDbImpl;
import edu.gatech.cs2340.risky.models.Map;
import edu.gatech.cs2340.risky.models.Territory;

public class MapFactory {
    
    public static Object get(Object id) {// we only have one map for now, but multiple could be cool
        Map m = Database.getModel(Map.class, id, new HashMapDbImpl<Map>());
        if (m != null) {
            return m;
        }
        
        m = new Map();
        m.id = id;
        Integer[][][] vertexeses = {
            {{4, 4}, {16, 4}, {12, 20}, {6, 18}},
            {{16, 4}, {14, 12}, {20, 18}, {24, 10}},
            {{20, 7}, {28, 6}, {26, 18}, {20, 18}, {24, 10}},
            {{12, 20}, {14, 12}, {20, 18}, {26, 18}, {24, 24}, {16, 22}},
            {{30, 24}, {34, 20}, {38, 22}, {36, 24}, {32, 26}},
            {{34, 8}, {42, 4}, {50, 6}, {58, 4}, {50, 12}},
            {{58, 4}, {68, 6}, {66, 14}, {56, 6}},
            {{56, 6}, {66, 14}, {62, 16}, {54, 8}},
            {{58, 12}, {58, 21}, {65, 22}, {68, 18}, {70, 12}, {67, 10}, {66, 14}, {62, 16}},
            {{42, 10}, {50, 12}, {54, 8}, {58, 12}, {58, 18}, {52, 18}},
            {{46, 20}, {47, 14}, {52, 18}, {58, 18}, {58, 21}, {55, 23}},
            {{68, 18}, {65, 22}, {62, 40}, {68, 36}, {71, 24}},
            {{55, 23}, {58, 21}, {65, 22}, {64, 28}, {58, 30}},
            {{52, 22}, {55, 23}, {58, 30}, {56, 34}, {54, 32}},
            {{57, 32}, {58, 30}, {64, 28}, {63, 34}, {61, 32}},
            {{55, 36}, {57, 32}, {61, 32}, {63, 34}, {62, 40}},
            {{46, 34}, {50, 38}, {48, 42}, {42, 38}},
            {{46, 34}, {44, 36}, {42, 38}, {45, 40}, {38, 42}, {35, 41}, {32, 38}, {36, 36}},
            {{35, 41}, {30, 44}, {26, 40}, {28, 38}, {32, 38}},
            {{34, 37}, {30, 34}, {27, 35}, {28, 38}, {32, 38}},
            {{27, 35}, {28, 38}, {26, 40}, {27, 41}, {22, 42}, {20, 34}},
            {{28, 42}, {18, 46}, {12, 34}, {20, 34}, {22, 42}, {27, 41}},
            {{16, 42}, {4, 40}, {2, 30}, {11, 32}},
            {{32, 26}, {36, 24}, {38, 22}, {40, 24}, {37, 27}, {33, 27}}
        };
        
        Integer[][] adjacencies = {
                {0, 1},
                {0, 3},
                {0, 22},
                {1, 2},
                {1, 3},
                {2, 3},
                {2, 4},
                {2, 5},
                {3, 4},
                {3, 20},
                {4, 9},
                {4, 23},
                {5, 6},
                {5, 7},
                {5, 9},
                {6, 7},
                {6, 8},
                {7, 8},
                {7, 9},
                {8, 9},
                {8, 10},
                {8, 11},
                {8, 12},
                {9, 10},
                {10, 12},
                {10, 13},
                {10, 23},
                {11, 12},
                {11, 14},
                {11, 15},
                {12, 13},
                {12, 14},
                {12, 15},
                {13, 14},
                {13, 15},
                {13, 16},
                {13, 23},
                {14, 15},
                {15, 16},
                {16, 17},
                {17, 18},
                {17, 19},
                {17, 23},
                {18, 19},
                {18, 20},
                {18, 21},
                {19, 20},
                {20, 21},
                {21, 22}
        };
        
        for (int i=0 ; i < vertexeses.length ; i++) {
            ArrayList<Object> adj = new ArrayList<Object>();
            for (int j=0 ; j < adjacencies.length ; j++) {
                if (adjacencies[j][0] == i) {
                    adj.add(adjacencies[j][1]);
                    
                } else if (adjacencies[j][1] == i) {
                    adj.add(adjacencies[j][0]);
                }
            }
            Territory t = new Territory(i, vertexeses[i], adj.toArray());
            m.addTerritory(t);
        }
        
        for (int i=0 ; i < vertexeses.length ; i++) {
            
        }
        
        Database.setModel(m);
        
        return m;
    }
    
}
